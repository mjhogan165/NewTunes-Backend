// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int    @id @default(autoincrement())
  username String 
  password String?
  email    String?
  profileImg String?
  sentRequests FriendRequest[]  @relation("sentRequests")
  receivedRequests FriendRequest[]  @relation("receivedRequests")
  createdBy NewTune[] @relation("createdBy")
  taggedIn NewTune[]
}

model FriendRequest {
  id Int @id @default(autoincrement())
  sender User @relation("sentRequests", fields: [senderId], references: [id], onDelete: Cascade)
  senderId Int
  receiver User  @relation("receivedRequests", fields: [receiverId], references: [id], onDelete: Cascade)
  receiverId Int
  status String
  @@unique([senderId, receiverId])
}

// model AcceptedFriend {
//   id  Int @id @default(autoincrement())
//   friends User[] @relation("friends", fields: [friendOneId], references: [id])
//   friendOneId Int 
//   friendTwo User @relation("friends", fields: [friendTwoId], references: [id])
//   friendTwoId Int
// }


model NewTune {
  id Int @id @default(autoincrement())
  artist String
  title String
  img String?
  createdBy User @relation("createdBy", fields: [createdById], references: [id], onDelete: Cascade)
  createdById Int
  comment String?
  tagged User[]
  // tagged User[]  @relation("tagged", fields: [taggedId], references: [taggedIn])
  // taggedId Int @default(0)
  // tagged User @relation(references: [taggedIn])
}